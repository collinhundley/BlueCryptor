// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXBuildFile section */
		_LinkFileRef_Cryptor_via_CryptorTests /* Cryptor.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = "_____Product_Cryptor" /* Cryptor.framework */; };
		__src_cc_ref_Sources/Crypto.swift /* Crypto.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Crypto.swift /* Crypto.swift */; };
		__src_cc_ref_Sources/Cryptor.swift /* Cryptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Cryptor.swift /* Cryptor.swift */; };
		__src_cc_ref_Sources/Digest.swift /* Digest.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Digest.swift /* Digest.swift */; };
		__src_cc_ref_Sources/HMAC.swift /* HMAC.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/HMAC.swift /* HMAC.swift */; };
		__src_cc_ref_Sources/KeyDerivation.swift /* KeyDerivation.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/KeyDerivation.swift /* KeyDerivation.swift */; };
		__src_cc_ref_Sources/RSA.swift /* RSA.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/RSA.swift /* RSA.swift */; };
		__src_cc_ref_Sources/Random.swift /* Random.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Random.swift /* Random.swift */; };
		__src_cc_ref_Sources/Status.swift /* Status.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Status.swift /* Status.swift */; };
		__src_cc_ref_Sources/StreamCryptor.swift /* StreamCryptor.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/StreamCryptor.swift /* StreamCryptor.swift */; };
		__src_cc_ref_Sources/Updatable.swift /* Updatable.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Updatable.swift /* Updatable.swift */; };
		__src_cc_ref_Sources/Utilities.swift /* Utilities.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Sources/Utilities.swift /* Utilities.swift */; };
		__src_cc_ref_Tests/CryptorTests/CryptorTests.swift /* CryptorTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Tests/CryptorTests/CryptorTests.swift /* CryptorTests.swift */; };
		__src_cc_ref_Tests/CryptorTests/XCTestManifests.swift /* XCTestManifests.swift in Sources */ = {isa = PBXBuildFile; fileRef = __PBXFileRef_Tests/CryptorTests/XCTestManifests.swift /* XCTestManifests.swift */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		F06FFEB71DA85029006A41E0 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = __RootObject_ /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = "______Target_Cryptor";
			remoteInfo = Cryptor;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		__PBXFileRef_Cryptor.xcodeproj/Configs/Project.xcconfig /* Cryptor.xcodeproj/Configs/Project.xcconfig */ = {isa = PBXFileReference; lastKnownFileType = text.xcconfig; path = Cryptor.xcodeproj/Configs/Project.xcconfig; sourceTree = "<group>"; };
		"__PBXFileRef_Package-Builder" /* Package-Builder */ = {isa = PBXFileReference; lastKnownFileType = folder; path = "Package-Builder"; sourceTree = "<group>"; };
		__PBXFileRef_Package.swift /* Package.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Crypto.swift /* Crypto.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Crypto.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Cryptor.swift /* Cryptor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Cryptor.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Digest.swift /* Digest.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Digest.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/HMAC.swift /* HMAC.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = HMAC.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/KeyDerivation.swift /* KeyDerivation.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = KeyDerivation.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/RSA.swift /* RSA.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = RSA.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Random.swift /* Random.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Random.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Status.swift /* Status.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Status.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/StreamCryptor.swift /* StreamCryptor.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = StreamCryptor.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Updatable.swift /* Updatable.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Updatable.swift; sourceTree = "<group>"; };
		__PBXFileRef_Sources/Utilities.swift /* Utilities.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = Utilities.swift; sourceTree = "<group>"; };
		__PBXFileRef_Tests/CryptorTests/CryptorTests.swift /* CryptorTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CryptorTests.swift; sourceTree = "<group>"; };
		__PBXFileRef_Tests/CryptorTests/XCTestManifests.swift /* XCTestManifests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = XCTestManifests.swift; sourceTree = "<group>"; };
		"_____Product_Cryptor" /* Cryptor.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = Cryptor.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		"_____Product_CryptorTests" /* CryptorTests.xctest */ = {isa = PBXFileReference; lastKnownFileType = file; path = CryptorTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		"___LinkPhase_Cryptor" /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		"___LinkPhase_CryptorTests" /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				_LinkFileRef_Cryptor_via_CryptorTests /* Cryptor.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		TestProducts_ /* Tests */ = {
			isa = PBXGroup;
			children = (
				"_____Product_CryptorTests" /* CryptorTests.xctest */,
			);
			name = Tests;
			sourceTree = "<group>";
		};
		"___RootGroup_" = {
			isa = PBXGroup;
			children = (
				__PBXFileRef_Package.swift /* Package.swift */,
				"_____Configs_" /* Configs */,
				"_____Sources_" /* Sources */,
				"__PBXFileRef_Package-Builder" /* Package-Builder */,
				"_______Tests_" /* Tests */,
				"____Products_" /* Products */,
			);
			sourceTree = "<group>";
		};
		"____Products_" /* Products */ = {
			isa = PBXGroup;
			children = (
				TestProducts_ /* Tests */,
				"_____Product_Cryptor" /* Cryptor.framework */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		"_____Configs_" /* Configs */ = {
			isa = PBXGroup;
			children = (
				__PBXFileRef_Cryptor.xcodeproj/Configs/Project.xcconfig /* Cryptor.xcodeproj/Configs/Project.xcconfig */,
			);
			name = Configs;
			sourceTree = "<group>";
		};
		"_____Sources_" /* Sources */ = {
			isa = PBXGroup;
			children = (
				"_______Group_Cryptor" /* Cryptor */,
			);
			name = Sources;
			sourceTree = "<group>";
		};
		"_______Group_Cryptor" /* Cryptor */ = {
			isa = PBXGroup;
			children = (
				__PBXFileRef_Sources/Crypto.swift /* Crypto.swift */,
				__PBXFileRef_Sources/Cryptor.swift /* Cryptor.swift */,
				__PBXFileRef_Sources/Digest.swift /* Digest.swift */,
				__PBXFileRef_Sources/HMAC.swift /* HMAC.swift */,
				__PBXFileRef_Sources/KeyDerivation.swift /* KeyDerivation.swift */,
				__PBXFileRef_Sources/Random.swift /* Random.swift */,
				__PBXFileRef_Sources/RSA.swift /* RSA.swift */,
				__PBXFileRef_Sources/Status.swift /* Status.swift */,
				__PBXFileRef_Sources/StreamCryptor.swift /* StreamCryptor.swift */,
				__PBXFileRef_Sources/Updatable.swift /* Updatable.swift */,
				__PBXFileRef_Sources/Utilities.swift /* Utilities.swift */,
			);
			name = Cryptor;
			path = Sources;
			sourceTree = "<group>";
		};
		"_______Group_CryptorTests" /* CryptorTests */ = {
			isa = PBXGroup;
			children = (
				__PBXFileRef_Tests/CryptorTests/CryptorTests.swift /* CryptorTests.swift */,
				__PBXFileRef_Tests/CryptorTests/XCTestManifests.swift /* XCTestManifests.swift */,
			);
			name = CryptorTests;
			path = Tests/CryptorTests;
			sourceTree = "<group>";
		};
		"_______Tests_" /* Tests */ = {
			isa = PBXGroup;
			children = (
				"_______Group_CryptorTests" /* CryptorTests */,
			);
			name = Tests;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		"______Target_Cryptor" /* Cryptor */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = "_______Confs_Cryptor" /* Build configuration list for PBXNativeTarget "Cryptor" */;
			buildPhases = (
				CompilePhase_Cryptor /* Sources */,
				"___LinkPhase_Cryptor" /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Cryptor;
			productName = Cryptor;
			productReference = "_____Product_Cryptor" /* Cryptor.framework */;
			productType = "com.apple.product-type.framework";
		};
		"______Target_CryptorTests" /* CryptorTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = "_______Confs_CryptorTests" /* Build configuration list for PBXNativeTarget "CryptorTests" */;
			buildPhases = (
				CompilePhase_CryptorTests /* Sources */,
				"___LinkPhase_CryptorTests" /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				__Dependency_Cryptor /* PBXTargetDependency */,
			);
			name = CryptorTests;
			productName = CryptorTests;
			productReference = "_____Product_CryptorTests" /* CryptorTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		__RootObject_ /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 9999;
			};
			buildConfigurationList = "___RootConfs_" /* Build configuration list for PBXProject "Cryptor" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
			);
			mainGroup = "___RootGroup_";
			productRefGroup = "____Products_" /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				"______Target_Cryptor" /* Cryptor */,
				"______Target_CryptorTests" /* CryptorTests */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		CompilePhase_Cryptor /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				__src_cc_ref_Sources/Crypto.swift /* Crypto.swift in Sources */,
				__src_cc_ref_Sources/Cryptor.swift /* Cryptor.swift in Sources */,
				__src_cc_ref_Sources/Digest.swift /* Digest.swift in Sources */,
				__src_cc_ref_Sources/HMAC.swift /* HMAC.swift in Sources */,
				__src_cc_ref_Sources/KeyDerivation.swift /* KeyDerivation.swift in Sources */,
				__src_cc_ref_Sources/Random.swift /* Random.swift in Sources */,
				__src_cc_ref_Sources/RSA.swift /* RSA.swift in Sources */,
				__src_cc_ref_Sources/Status.swift /* Status.swift in Sources */,
				__src_cc_ref_Sources/StreamCryptor.swift /* StreamCryptor.swift in Sources */,
				__src_cc_ref_Sources/Updatable.swift /* Updatable.swift in Sources */,
				__src_cc_ref_Sources/Utilities.swift /* Utilities.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		CompilePhase_CryptorTests /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				__src_cc_ref_Tests/CryptorTests/CryptorTests.swift /* CryptorTests.swift in Sources */,
				__src_cc_ref_Tests/CryptorTests/XCTestManifests.swift /* XCTestManifests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		__Dependency_Cryptor /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = "______Target_Cryptor" /* Cryptor */;
			targetProxy = F06FFEB71DA85029006A41E0 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		_ReleaseConf_Cryptor /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = "$(PLATFORM_DIR)/Developer/Library/Frameworks";
				HEADER_SEARCH_PATHS = (
					"/Users/Collin/Documents/Swift/BlueCryptor/Packages/CommonCrypto-0.1.4",
					"/Users/Collin/Documents/Swift/BlueCryptor/Packages/OpenSSL-0.3.0",
					/usr/local/Cellar/openssl/1.0.2h_1/include,
				);
				INFOPLIST_FILE = Cryptor.xcodeproj/Cryptor_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				LIBRARY_SEARCH_PATHS = /usr/local/Cellar/openssl/1.0.2h_1/lib;
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Cryptor;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SWIFT_VERSION = 3.0;
			};
			name = Release;
		};
		_ReleaseConf_CryptorTests /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = "$(PLATFORM_DIR)/Developer/Library/Frameworks";
				HEADER_SEARCH_PATHS = (
					"/Users/Collin/Documents/Swift/BlueCryptor/Packages/CommonCrypto-0.1.4",
					"/Users/Collin/Documents/Swift/BlueCryptor/Packages/OpenSSL-0.3.0",
				);
				INFOPLIST_FILE = Cryptor.xcodeproj/CryptorTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_VERSION = 3.0;
			};
			name = Release;
		};
		"___DebugConf_Cryptor" /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ENABLE_TESTABILITY = YES;
				FRAMEWORK_SEARCH_PATHS = "$(PLATFORM_DIR)/Developer/Library/Frameworks";
				HEADER_SEARCH_PATHS = (
					"/Users/Collin/Documents/Swift/BlueCryptor/Packages/CommonCrypto-0.1.4",
					"/Users/Collin/Documents/Swift/BlueCryptor/Packages/OpenSSL-0.3.0",
					/usr/local/Cellar/openssl/1.0.2h_1/include,
				);
				INFOPLIST_FILE = Cryptor.xcodeproj/Cryptor_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "$(TOOLCHAIN_DIR)/usr/lib/swift/macosx";
				LIBRARY_SEARCH_PATHS = /usr/local/Cellar/openssl/1.0.2h_1/lib;
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = Cryptor;
				PRODUCT_MODULE_NAME = "$(TARGET_NAME:c99extidentifier)";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 3.0;
			};
			name = Debug;
		};
		"___DebugConf_CryptorTests" /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				EMBEDDED_CONTENT_CONTAINS_SWIFT = YES;
				FRAMEWORK_SEARCH_PATHS = "$(PLATFORM_DIR)/Developer/Library/Frameworks";
				HEADER_SEARCH_PATHS = (
					"/Users/Collin/Documents/Swift/BlueCryptor/Packages/CommonCrypto-0.1.4",
					"/Users/Collin/Documents/Swift/BlueCryptor/Packages/OpenSSL-0.3.0",
				);
				INFOPLIST_FILE = Cryptor.xcodeproj/CryptorTests_Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 3.0;
			};
			name = Debug;
		};
		"_____Release_" /* Release */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = __PBXFileRef_Cryptor.xcodeproj/Configs/Project.xcconfig /* Cryptor.xcodeproj/Configs/Project.xcconfig */;
			buildSettings = {
			};
			name = Release;
		};
		"_______Debug_" /* Debug */ = {
			isa = XCBuildConfiguration;
			baseConfigurationReference = __PBXFileRef_Cryptor.xcodeproj/Configs/Project.xcconfig /* Cryptor.xcodeproj/Configs/Project.xcconfig */;
			buildSettings = {
			};
			name = Debug;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		"___RootConfs_" /* Build configuration list for PBXProject "Cryptor" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				"_______Debug_" /* Debug */,
				"_____Release_" /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		"_______Confs_Cryptor" /* Build configuration list for PBXNativeTarget "Cryptor" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				"___DebugConf_Cryptor" /* Debug */,
				_ReleaseConf_Cryptor /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		"_______Confs_CryptorTests" /* Build configuration list for PBXNativeTarget "CryptorTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				"___DebugConf_CryptorTests" /* Debug */,
				_ReleaseConf_CryptorTests /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = __RootObject_ /* Project object */;
}
